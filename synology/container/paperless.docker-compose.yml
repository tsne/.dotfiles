version: "3.8"
services:
  redis:
    image: docker.io/library/redis:7
    networks: ["paperless"]
    restart: unless-stopped
    volumes:
      - redisdata:/data

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    networks: ["paperless"]
    restart: unless-stopped
    depends_on:
      postgres: {condition: service_started}
      redis: {condition: service_started}
      gotenberg: {condition: service_started}
      tika: {condition: service_started}
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - data:/usr/src/paperless/data
      - media:/usr/src/paperless/media
      - /volume1/Dokumente/export:/usr/src/paperless/export
      - /volume1/Dokumente/consume:/usr/src/paperless/consume
    environment:
      PAPERLESS_REDIS: redis://redis:6379
      PAPERLESS_DBHOST: postgres
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998
      USERMAP_UID: "1027"
      USERMAP_GID: "65536"
      PAPERLESS_TIME_ZONE: Europe/Berlin
      PAPERLESS_OCR_LANGUAGE: deu
      PAPERLESS_FILENAME_FORMAT: "{created_year}/{correspondent}/{created}_{title}"
      PAPERLESS_FILENAME_FORMAT_REMOVE_NONE: "True"
      PAPERLESS_CONSUMER_ENABLE_BARCODES: "True"
      #PAPERLESS_ADMIN_USER: tsne
      #PAPERLESS_ADMIN_PASSWORD: admin

  postgres:
    image: docker.io/library/postgres:15
    networks: ["paperless"]
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless

  gotenberg:
    image: docker.io/gotenberg/gotenberg:7.8
    networks: ["paperless"]
    restart: unless-stopped
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"

  tika:
    image: ghcr.io/paperless-ngx/tika:latest
    networks: ["paperless"]
    restart: unless-stopped

volumes:
  data:
  media:
  pgdata:
  redisdata:

networks:
  paperless: {}
